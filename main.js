!function(){"use strict";class e{constructor(e,t,s){let{name:i,link:o}=e;this._name=i,this._link=o,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__trash-button").addEventListener("click",(()=>{this._handleTrashIcon()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this._link,this._name)}))}_handleTrashIcon(){this._cardElement.remove()}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}getView(){return this._cardElement=this._cardSelector.cloneNode(!0),console.log(this._name),this._cardElement.querySelector(".card__image").setAttribute("src",this._link),this._cardElement.querySelector(".card__title").setAttribute("alt",this._name),this._cardElement.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hideInputError(e){console.log("reached here3");const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent=" ",t.classList.remove(this._errorClass)}_showInputError(e){console.log("reached here2");const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}toggleButtonState(){this._hasInvalidInput(this._inputEls)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this.toggleButtonState(),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=t,this._handleEscClose=this._handleEscClose.bind(this),this._closeButton=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target===e.currentTarget||e.target.classList.contains("modal__close"))&&this.close()}))}}class i extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._formInputs=this._popupForm.querySelectorAll(".modal__input"),this._handleFormSubmit=t}_getInputValues(){const e={};return this._formInputs.forEach((t=>{e[t.name]=t.value})),e}_submitForm=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())};setEventListeners(){this._popupForm.addEventListener("submit",this._submitForm),super.setEventListeners()}close(){this._popupForm.reset(),super.close()}}const o=document.querySelector("#profile-edit-button"),r=document.querySelector("#profile-edit-modal"),n=document.querySelector("#preview-image-modal"),l=document.querySelector("#add-card-modal"),a=(r.querySelector("#profile-modal-close"),l.querySelector("#profile-add-close"),n.querySelector("#modal-preview-close"),document.querySelector(".profile__add-button")),c=document.querySelector(".profile__title"),u=document.querySelector(".profile__description"),d=document.querySelector("#profile-title-input"),_=document.querySelector("#profile-description-input"),p=(n.querySelector(".modal__footer"),r.querySelector("#edit-profile-form")),h=l.querySelector("#add-card-form"),m=document.querySelector("#card-template").content.firstElementChild,f=document.querySelector(".gallery__list"),E=(h.querySelector("#modal__input_type_title"),h.querySelector("#modal__input_type_url"),{inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:".modal__input_type_error",errorClass:".modal__error"}),b=new class{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._container=t,this._renderer=i}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Boxed Water Is Better",link:"https://images.unsplash.com/photo-1570654621852-9dd25b76b38d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80"},{name:"Andrea De Santis",link:"https://images.unsplash.com/photo-1682282462523-996afa93708b?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1887&q=80"},{name:"Josh Hild",link:"https://images.unsplash.com/photo-1681958757405-926494358753?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1169&q=80"},{name:"Budapest, Hongrie",link:"https://images.unsplash.com/photo-1549877452-9c387954fbc2?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80"},{name:"Mumbia, India",link:"https://plus.unsplash.com/premium_photo-1674898520828-87fbb9cc428e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80"},{name:"La Petite Ceinture",link:"https://images.unsplash.com/photo-1556905200-279565513a2d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80"}],renderer:e=>{b.addItem(q(e))}},f);b.renderItems();const v=new class{constructor(e){let{profileTitle:t,profileDescription:s}=e;this._profileTitle=t,this._profileDescription=s}getUserInfo(){const e={};return console.log(this._profileTitle),e.profileTitle=this._profileTitle.textContent,e.profileDescription=this._profileDescription.textContent,e}setUserInfo(e,t){this._profileTitle.textContent=e,this._profileDescription.textContent=t}}({profileTitle:c,profileDescription:u});console.log(v);const S=new t(E,p),y=new t(E,h);S.enableValidation(),y.enableValidation(),console.log(r);const w=new i(r,(function(e){const{name:t,description:s}=e;v.setUserInfo(t,s),w.close()}));w.setEventListeners();const x=new i(l,(function(e){const{name:t,link:s}=e;b.addItem(q(e)),x.close()}));x.setEventListeners();const g=new class extends s{constructor(e){super({popupSelector:e}),this._previewImage=this._popupElement.querySelector(".modal__image"),console.log(this._previewImage),this._previewCaption=this._popupElement.querySelector(".modal__footer")}open(e){const{link:t,name:s}=e;this._previewImage.src=t,this._previewImage.alt=s,this._previewCaption.textContent=s,super.open()}setEventListeners(){super.setEventListeners()}}(n);function q(t){return new e(t,m,L).getView()}function L(e,t){const s={link:e,name:t};g.open(s)}g.setEventListeners(),o.addEventListener("click",(()=>{const{profileTitle:e,profileDescription:t}=v.getUserInfo();d.value=e,_.value=t,w.open()})),a.addEventListener("click",(()=>{x.open(),y.toggleButtonState()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,